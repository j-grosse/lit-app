{"version":3,"file":"gauge-element.js","sourceRoot":"","sources":["src/gauge-element.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAiB,MAAM,KAAK,CAAC;AAC1D,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAGnD,IAAM,YAAY,GAAlB,MAAM,YAAa,SAAQ,UAAU;IAArC;;QACqB,kBAAa,GAAG,GAAG,CAAC;QACpB,aAAQ,GAAG,IAAI,CAAC;QAChB,gBAAW,GAAG,IAAI,CAAC;QACnB,iBAAY,GAAG,EAAE,CAAC;IA2G9C,CAAC;IArBoB,OAAO,CAAC,OAAuB;QAChD,IAAI,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,CAAC;YACjC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,mBAAmB,EAAE,GAAG,IAAI,CAAC,aAAa,KAAK,CAAC,CAAC;QAC1E,CAAC;IACH,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;;;;;;;kBAOG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;4BACd,IAAI,CAAC,YAAY;;;;KAIxC,CAAC;IACJ,CAAC;;AAxGe,mBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkF3B,AAlFqB,CAkFpB;AAvFwB;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;mDAAqB;AACpB;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;8CAAiB;AAChB;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;iDAAoB;AACnB;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;kDAAmB;AAJjC,YAAY;IADxB,aAAa,CAAC,eAAe,CAAC;GAClB,YAAY,CA+GxB","sourcesContent":["import {LitElement, html, css, PropertyValues} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\n@customElement('gauge-element')\nexport class GaugeElement extends LitElement {\n  @property({type: Number}) gaugeArcValue = 180;\n  @property({type: Number}) rawValue = 1.00;\n  @property({type: Number}) scaledValue = 1.00;\n  @property({type: String}) maxValueText = '';\n\n  static override styles = css`\n    body {\n      font-family: Open Sans, sans-serif;\n    }\n\n    .gauge {\n      height: 85px;\n      width: 170px;\n      overflow: hidden;\n      position: relative;\n    }\n\n    .gauge .arc {\n      background-image: radial-gradient(#fff 0, #fff 60%, transparent 60%),\n        /* inner circle */\n          conic-gradient(\n            #f09605 0,\n            #f09605 var(--gauge-arc-value),\n            #e1e8f9 var(--gauge-arc-value),\n            #e1e8f9 180deg,\n            #fff 180deg,\n            #fff 360deg\n          );\n      background-position: center center, center center;\n      background-repeat: no-repeat;\n      background-size: 100% 100%, 100% 100%;\n      border-radius: 50%;\n      border-style: none;\n      height: 170px;\n      position: relative;\n      transform: rotate(-90deg);\n      width: 100%;\n    }\n\n    .gauge .mask::before,\n    .gauge .mask::after {\n      background-image: radial-gradient(\n        transparent 0,\n        transparent 50%,\n        #fff 50%,\n        #fff 100%\n      );\n      clip-path: polygon(0 50%, 100% 50%, 100% 100%, 0% 100%);\n      content: '';\n      height: 18px;\n      position: absolute;\n      width: 18px;\n    }\n\n    .gauge .mask::before {\n      left: -2px;\n      bottom: 0;\n    }\n\n    .gauge .mask::after {\n      bottom: 0;\n      right: -2px;\n    }\n\n    .gauge .label {\n      bottom: -20px;\n      color: #8693a9;\n      left: 0;\n      line-height: 26px;\n      position: absolute;\n      text-align: center;\n      width: 100%;\n    }\n\n    .gauge .label ul {\n      list-style: none;\n      padding: 0;\n    }\n\n    .gauge .label li {\n      text-align: center;\n      font-size: 1.5rem;\n    }\n\n    #unit {\n      font-size: 0.5rem;\n    }\n  `;\n\n  protected override updated(changed: PropertyValues): void {\n    if (changed.has('gaugeArcValue')) {\n      this.style.setProperty('--gauge-arc-value', `${this.gaugeArcValue}deg`);\n    }\n  }\n\n  override render() {\n    return html`\n      <div class=\"gauge\">\n        <div class=\"arc\"></div>\n        <div class=\"pointer\"></div>\n        <div class=\"mask\"></div>\n        <div class=\"label\">\n          <ul>\n            <li>${this.rawValue.toFixed(2)}</li>\n            <li id=\"unit\">${this.maxValueText}</li>\n          </ul>\n        </div>\n      </div>\n    `;\n  }\n}\n"]}