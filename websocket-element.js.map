{"version":3,"file":"websocket-element.js","sourceRoot":"","sources":["src/websocket-element.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,IAAI,EAAE,UAAU,EAAC,MAAM,KAAK,CAAC;AACrC,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAGnD,IAAM,gBAAgB,GAAtB,MAAM,gBAAiB,SAAQ,UAAU;IAAzC;;QACoB,aAAQ,GAAa,EAAE,CAAC;QACvB,WAAM,GAAqB,IAAI,CAAC;IA4C5D,CAAC;IA1CU,YAAY;QACnB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,MAAM,GAAG,IAAI,SAAS,CAAC,qBAAqB,CAAC,CAAC;QAEnD,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,EAAE;YACxB,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;YAChD,uCAAuC;YACvC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YACjC,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC;QAEF,8BAA8B;QAC9B,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,KAAK,EAAE,EAAE;YAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACvC,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,kBAAkB,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAC,CAAC,CAC7D,CAAC;YACF,OAAO,CAAC,GAAG,CAAC,uCAAuC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtE,CAAC,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,GAAG,EAAE;YACzB,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC7C,CAAC,CAAC;IACJ,CAAC;IAED,YAAY;QACV,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,eAAe,EAAE;YAC/B,MAAM,EAAE;gBACN,MAAM,EAAE,IAAI,CAAC,MAAM;aACpB;SACF,CAAC,CACH,CAAC;IACJ,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;aACF,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,CAAA,MAAM,OAAO,MAAM,CAAC;KAC/D,CAAC;IACJ,CAAC;CACF,CAAA;AA7C0B;IAAxB,QAAQ,CAAC,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC;kDAAyB;AACvB;IAAzB,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;gDAAiC;AAF/C,gBAAgB;IAD5B,aAAa,CAAC,mBAAmB,CAAC;GACtB,gBAAgB,CA8C5B","sourcesContent":["import {html, LitElement} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\n@customElement('websocket-element')\nexport class WebSocketElement extends LitElement {\n  @property({type: Array}) messages: number[] = [];\n  @property({type: Object}) socket: WebSocket | null = null;\n\n  override firstUpdated() {\n    this.connectWebSocket();\n  }\n  connectWebSocket() {\n    this.socket = new WebSocket('ws://localhost:8000');\n\n    this.socket.onopen = () => {\n      console.log('WebSocket connection established');\n      // Request initial data from the server\n      this.socket?.send('initialData');\n      this.socketIsOpen();\n    };\n\n    // receive message from server\n    this.socket.onmessage = (event) => {\n      this.messages = JSON.parse(event.data);\n      this.dispatchEvent(\n        new CustomEvent('message-received', {detail: this.messages})\n      );\n      console.log('Client received message from server: ', this.messages);\n    };\n\n    this.socket.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n  }\n\n  socketIsOpen() {\n    this.dispatchEvent(\n      new CustomEvent('socket-opened', {\n        detail: {\n          socket: this.socket,\n        },\n      })\n    );\n  }\n\n  override render() {\n    return html`\n      <!-- ${this.messages.map((message) => html`<p>${message}</p>`)} -->\n    `;\n  }\n}\n"]}